
#output = io.RawIOBase()
#output.write(u'First line.\n')
#output.write(u'Second line.\n')

# Retrieve file contents -- this will be
# u'First line.\nSecond line.\n'
#contents = output.readall()
	

# Close object and discard memory buffer --
# .getvalue() will now raise an exception.
#output.close()

#f = open("test.txt", "rb")
#w = open("testw.txt","wb")
#try:
#	byte = f.read(1)

#	while byte != "":
		#bytes = '{0:08b}'.format(ord(byte))
#		print (byte)
		#w.write(bytes([int(byte, 2)]))

		# Do stuff with byte.
#		byte = f.read(1)

#finally:
#    f.close()

with open("in.txt", "rb") as in_file:
	with open("out.txt", "wb") as out_file:
		byte = in_file.read(1)	
		while byte:
				#here we got the bytes
				for item in bytes(byte):
					#here we got the int of the byte
					print("New Number:")					
					print(item)	
					#each int now needs to be calculatet as ternary number
					# so we divide trough3 and as our new format will have the base of 6 we will have to make 6 iterations until there is no rest
					dnaint = item
					rest = dnaint
					i = 6 #number of iterations
					ternary = list()
					while i > 0:
						number = dnaint//3
						rest   = dnaint%3
						dnaint = number
						i = i - 1 # next iteration
						ternary.append(rest)
						print(rest)
					summe = 0
					i = 0
					for dna in ternary:					
						summe = summe + dna*(3**i)
						i = i + 1
					print(summe)
					print(chr(summe))
					print("")
				out_file.write(byte)
				byte = in_file.read(1)

		

