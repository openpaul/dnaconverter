# some variables
hugetryte = ""
DNA       = "A"

#conversion to DNA
# lastlettervalue:letter
next = {"A0":"G",
		"A1":"C",
		"A2":"T",
		"G0":"C",
		"G1":"T",
		"G2":"A",
		"C0":"T",
		"C1":"A",
		"C2":"G",
		"T0":"A",
		"T1":"G",
		"T2":"C"}

class encodedna:
	def __init__(self):
	#erstmal datei einlesen
		self.readfile()

	# this opens any file and converts it into DNA
	def readfile(self):
		global hugetryte
		global DNA
		
		#open file trough path
		with open("data/input.jpg", "rb") as in_file:
			#data = in_file.read()
			#print("this file has bytes:")			
			#print(len(data))

			# 1 byte a time
			byte = in_file.read(1)
			while byte:
				#here we got the bytes
				for item in bytes(byte):

					#each int now needs to be calculatet as ternary number
					# so we divide trough3 and as our new format will have the base of 6 we will have to make 6 iterations until there is no rest
					dnaint = item
					rest   = dnaint
					i      = 6 #number of iterations
					ternary = list()
					while i > 0:
						number = dnaint//3
						rest   = dnaint%3
						dnaint = number
						i      = i - 1 # next iteration
						ternary.append(rest)
						#print(rest)
					print(item)
					self.createtryte(ternary)
				# 1 byte a time			
				byte = in_file.read(1)	
				
		self.converttryte2DNA(hugetryte)
		self.createfasta(DNA)
		
	# this function creates little trytes and then appends them to the huge on
	# every tryte has 6 number from 0,1,2 (e.g 102010 021011 ...... ......)
	def createtryte(self, ternary):
		tryte = str()
		for n in ternary:
			tryte += str(n)
		self.createmegatryte(tryte)

	# this function creates one huge tryte
	def createmegatryte(self,tryte):
		global hugetryte
		hugetryte += tryte

	def converttryte2DNA(self,ternary):
		global DNA
		global next		
		last = "A"
		length = len(ternary)
		a = 0
		while length > 0:
			
			dimer = last + ternary[a:a+1]
			last = next[dimer]
			DNA += last
			print(last);
			length = length -1
			a      = a + 1
	def createfasta(self,DNA):
		with open("data/dna_output.fasta", "w") as out_file:
			out_file.write(DNA)
		
encodedna()

